<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raycoarana - Articles</title>
    <description>My coding adventures and other random stuff</description>
    <link>
    http://raycoarana.com/</link>
    
      
      <item>
        <title>Concurrency with Promise Style. DroidCon 2015</title>
        
          <description>&lt;p&gt;Os dejo por aquí la presentación de mi charla de hoy en la DroidCon Spain 2015 dónde hablamos del patrón Promise, como implementarlo con jDeferred y como podemos beneficiarnos de su uso.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerd.s3.amazonaws.com/presentations/ef9ad55c34fe4a68b961eb0a214f34ce/Concurrency-with-Promise-Style.pdf&quot;&gt;&lt;strong&gt;Descargar&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;ef9ad55c34fe4a68b961eb0a214f34ce&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

</description>
        
        <pubDate>Sat, 25 Apr 2015 17:25:02 +0200</pubDate>
        <link>
        http://raycoarana.com//blog/2015/04/concurrency-with-promise-style-droidcon-2015/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2015/04/concurrency-with-promise-style-droidcon-2015/</guid>
      </item>
      
    
      
      <item>
        <title>Baindo, un MVVM diferente para Android</title>
        
          <description>&lt;p&gt;Hoy os vengo a presentar algo en lo que llevo un tiempo trabajando, &lt;strong&gt;Baindo&lt;/strong&gt;, un framework para aplicar &lt;strong&gt;MVVM en aplicaciones Android&lt;/strong&gt;, del que quiero mostraros un &lt;em&gt;Sneak Peek&lt;/em&gt; del estado actual.
¿Por qué otro framework MVVM si existen miles? La respuesta a esta pregunta está en las ideas base que inspiran Baindo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Evitar el uso de cualquier tipo de Reflection.&lt;/li&gt;
  &lt;li&gt;Sintaxis cómoda en código Java. Nada de Custom Views o Custom Attributes en nuestros layouts.&lt;/li&gt;
  &lt;li&gt;ViewModels sencillos y con ninguna dependencia con Android.&lt;/li&gt;
  &lt;li&gt;Maximizar el rendimiento del hilo de UI. Comandos y eventos de modificación de las propiedades se ejecutan en Background.&lt;/li&gt;
  &lt;li&gt;Actualización de UI desde cualquier hilo a través de las propiedades del ViewModel. Olvidate de tener que usar AsyncTask, Handlers o similares para hacer cambios en la UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pinta bien, ¿no? ;-). Pues además será OpenSource y estará disponible en GitHub muy pronto. Veamos que pinta tiene.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 20 Jan 2015 22:59:40 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2015/01/baindo-un-mvvm-diferente-para-android/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2015/01/baindo-un-mvvm-diferente-para-android/</guid>
      </item>
      
    
      
      <item>
        <title>RoboRouter, mi primera librería OpenSource</title>
        
          <description>&lt;p&gt;Hace tiempo que no escribo nada en el Blog, pero hoy tengo el orgullo de presentar mi primera librería &lt;em&gt;OpenSource&lt;/em&gt;: RoboRouter. Es para Android y disponible a través de &lt;strong&gt;Maven/Gradle&lt;/strong&gt;.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 03 Nov 2014 23:17:07 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/11/roborouter/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/11/roborouter/</guid>
      </item>
      
    
      
      <item>
        <title>Full text search contra otras formas de búsqueda</title>
        
          <description>&lt;p&gt;Algo muy común en cualquier aplicación Android es el añadir la posibilidad de realizar búsquedas sobre un ListView. Dado que para mostrar los datos sobre un ListView probablemente ya hemos realizado una consulta a la base de datos SQLite donde estos residen, podemos creer que lo mejor es filtrar los datos que ya tenemos cargados en memoria. De esta forma no pagamos de nuevo el precio del acceso a la base de datos que está en disco y es lenta; ni tampoco tenemos que volver a crear los objetos a partir del Cursor que esta nos devuelve. Pero, ¿hemos pensado bien el coste de buscar texto sobre los datos cargados en memoria? ¿Es esto mejor que un acceso a disco? ¿Escala?&lt;/p&gt;

</description>
        
        <pubDate>Sun, 07 Sep 2014 22:28:14 +0200</pubDate>
        <link>
        http://raycoarana.com//blog/2014/09/full-text-search-contra-formas-busqueda/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/09/full-text-search-contra-formas-busqueda/</guid>
      </item>
      
    
      
      <item>
        <title>Patrón Promise con jdeferred</title>
        
          <description>&lt;p&gt;El patrón Promise es un patrón que trata de simplificar la estructura de nuestro código cuando trabajamos con operaciones asíncronas, algo que está a la orden del día en cualquier aplicación con interfaz gráfica, pero también importante en servicios que tienen distintas dependencias para realizar su trabajo y este puede realizarse en paralelo.&lt;/p&gt;

&lt;p&gt;En primer lugar vamos a plantear el problema que trata de resolverse y cómo lo simplificamos con este patrón y en concreto con la librería &lt;strong&gt;jdeferred&lt;/strong&gt;. Luego veremos el caso de particular de Android y el soporte específico que nos ofrece &lt;strong&gt;jdeferred&lt;/strong&gt; que nos simplifican aún más el trabajo.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 08 Aug 2014 00:02:48 +0200</pubDate>
        <link>
        http://raycoarana.com//blog/2014/08/patron-promise-con-jdeferred/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/08/patron-promise-con-jdeferred/</guid>
      </item>
      
    
      
      <item>
        <title>Prototipado de apps con WireframeSketcher</title>
        
          <description>&lt;p&gt;Aunque este es un blog fundamentalmente de desarrollo, hoy quería comentar un poco algo que nos toca siempre al comenzar una aplicación: la conceptualización. En el desarrollo móvil no es ningún secreto que tenemos &lt;strong&gt;el problema del tamaño de la pantalla&lt;/strong&gt; -a pesar de los pseudo tablets que tenemos ahora por teléfonos-. A la hora de conceptualizar la aplicación, es fundamental utilizar una &lt;strong&gt;herramienta que nos permita de forma rápida poder organizar la información&lt;/strong&gt; y cómo se comportará nuestra app.&lt;/p&gt;

&lt;p&gt;Desde hace un tiempo he estado buscando la mejor herramienta para esta labor. Algo fundamental que debe tener una herramienta de este tipo es que &lt;strong&gt;respete las proporciones de los componentes nativos&lt;/strong&gt; de la plataforma. Sin esto, conceptualizar una pantalla es un disparate, ya que estamos organizando la información en base a una premisa que puede ser falsa y a la hora de llevarla a la práctica, podemos ver que las cosas no nos caben -o nos sobra espacio-. En esta búsqueda me he topado con &lt;strong&gt;WireframeSketcher&lt;/strong&gt;, una herramienta la mar de interesante, basada en Eclipse y con todos los elementos nativos de Android 4.X -también tiene los de iOS y Windows Phone entre otros-. Vamos a ver las principales características de esta herramienta.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 19 Jun 2014 10:59:16 +0200</pubDate>
        <link>
        http://raycoarana.com//blog/2014/06/prototipado-de-apps-con-wireframesketcher/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/06/prototipado-de-apps-con-wireframesketcher/</guid>
      </item>
      
    
      
    
      
    
      
    
      
      <item>
        <title>Cards API. Primeros pasos con Google Glass (IV)</title>
        
          <description>&lt;p&gt;Hoy vamos a ver cómo crear interfaces gráficas para nuestro Glassware utilizando el concepto de tarjetas o Cards. Como sabéis, en Google Glass no hay botones, no hay forma de interactuar con elementos en la interfaz gráfica, sino que esta se compone de pantallas por las que podemos movernos, pantallas que se denominan tarjetas o Cards. El propio Timeline que se representa en la inferfaz inicial de Google Glass es un conjunto de tarjetas por las que podemos movernos. ¿Cómo podemos crear una interfaz de este estilo? Pues de forma muy fácil utilizando las clases CardScrollView, CardScrollAdapter y Card. ¡Vamos a ello!&lt;/p&gt;

</description>
        
        <pubDate>Mon, 31 Mar 2014 09:00:45 +0200</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/cards-api-primeros-pasos-google-glass-iv/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/cards-api-primeros-pasos-google-glass-iv/</guid>
      </item>
      
    
      
      <item>
        <title>Voice triggers. Primeros pasos con Google Glass (III)</title>
        
          <description>&lt;p&gt;En el anterior artículo sobre los primeros pasos con Google Glass empezamos a ver el concepto de &lt;strong&gt;Voice trigger&lt;/strong&gt;, los comandos de voz que permiten lanzar nuestras aplicaciones. Vamos a hablar un poco más cerca de ellas y qué cosas podemos hacer a día de hoy con la API.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 28 Mar 2014 18:47:02 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass-iii/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass-iii/</guid>
      </item>
      
    
      
      <item>
        <title>Primeros pasos con Google Glass (II)</title>
        
          <description>&lt;p&gt;Siguiendo la serie de artículos de primeros pasos Google Glass, toca empezar a ponernos manos a la obra con nuestra primera aplicación. En el último artículo sobre Google Glass, dimos un vistazo general de sus características técnicas y de uso, que nos sirve para tener idea de que se puede y que no se puede hacer con ellas. Si bien hay que tener en cuenta que estamos ante un producto que está aún en una fase temprana de desarrollo y que muchas cosas cambiarán hasta que su salida a la venta al público general.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 26 Mar 2014 08:42:01 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass-ii/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass-ii/</guid>
      </item>
      
    
      
      <item>
        <title>SSL Pinning y ataques man-in-the-middle</title>
        
          <description>&lt;p&gt;Un problema que cada vez más está de actualidad es la seguridad y la privacidad en las aplicaciones móviles. Existe además un problema mayor que en otros entornos dado que es más plausible el conectarse a redes externas como WiFi’s públicas. Como desde nuestras apps no podemos controlar que redes utiliza el usuario, debemos securizar las conexiones con SSL. Pero…, ¿es esto suficiente? &lt;em&gt;Pues va a ser que no&lt;/em&gt;.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 05 Mar 2014 19:09:43 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/ssl-pinning-ataques-man-in-the-middle/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/ssl-pinning-ataques-man-in-the-middle/</guid>
      </item>
      
    
      
      <item>
        <title>Primeros pasos con Google Glass (I)</title>
        
          <description>&lt;p&gt;En esta serie de artículos, del que este es el primero, vamos a aprender a crear aplicaciones para Google Glass y esas legiones de &lt;em&gt;Explorers&lt;/em&gt; que hay ahí fuera. Aunque tiene un precio aún prohibitivo y su disponibilidad es muy limitada (solo para residentes en EEUU y bajo invitación), está llamado a ser el gadget del futuro y rivalizar muy de tú a tú con otros gadgets que giran entorno a los Smartphones. Dispositivos que se conectan a nuestro Smartphone y lo complementan, permitiendo realizar ciertas acciones sin tener que sacarlo de nuestro bolsillo, como las pulseras, los relojes, etc.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 02 Mar 2014 20:24:59 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/primeros-pasos-con-google-glass/</guid>
      </item>
      
    
      
      <item>
        <title>10 antipatrones de navegación en Android</title>
        
          <description>&lt;p&gt;Los chicos de Android Design in Action han publicado un video en YouTube donde nos describen algunos antipatrones de navegación que se han encontrado en algunas apps de las que analizan regularmente. Es un video muy interesante y casi obligatorio ver para no caer en malos patrones a la hora de crear aplicaciones. Si bien ver el video está bien, os lo resumo de forma rápida por si no tenéis 26 min libres para verlo.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 02 Mar 2014 13:00:38 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/03/antipatrones-de-navegacion-en-android/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/03/antipatrones-de-navegacion-en-android/</guid>
      </item>
      
    
      
      <item>
        <title>Esto empieza...</title>
        
          <description>&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;raycoarana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Blog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Blog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addTheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;feather&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PublishListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Let's start coding!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        
        <pubDate>Sun, 23 Feb 2014 12:50:21 +0100</pubDate>
        <link>
        http://raycoarana.com//blog/2014/02/hello-world/</link>
        <guid isPermaLink="true">http://raycoarana.com//blog/2014/02/hello-world/</guid>
      </item>
      
    
  </channel>
</rss>
